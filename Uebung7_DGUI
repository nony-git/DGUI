#Afg. 13 a) Dropdown Continent, Default Europe

import pandas as pd
import plotly.express as px
import numpy as np
import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output

df = pd.read_csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv")
df.replace('', np.NaN , inplace = True)
numbers = df._get_numeric_data()
numbers[numbers < 0] = np.NaN


app = dash.Dash(__name__)




app.layout = html.Div([
    
        
    html.H1("Covid-19 Dashboard with Dash", style = {'text-align': 'center'}),
    html.H4("Numbers and facts about Covid-19", style = {'text-align': 'left'}),

    dcc.Dropdown(id='continent',
                 options=[
                     {"label": "North America", "value": 'North America'},
                     {"label": "South America", "value": 'South America'},
                     {"label": "Europe", "value": 'Europe'},
                     {"label": "Asia", "value": 'Asia'},
                     {"label": "Oceania", "value": 'Oceania'},
                     {"label": "Africa", "value": 'Africa'},],
                 multi=False,
                 value='Europe',
                 style={"width": "40%"}),
    
        
    dcc.Graph(id='scat', figure = {}),
    
])

@app.callback(
    Output(component_id='scat', component_property='figure'),
    [Input(component_id='continent', component_property='value')]
)

def update_graph(option_slctd):
    dff = df.copy()
    dff = dff[dff["continent"] == option_slctd]
    
# 13b)    

    fig = px.scatter("dff", x="new_cases", y="new_deaths", color="location",
                 size='gdp_per_capita', trendline="ols")
   

    return fig


if __name__ == '__main__':
    app.run_server(debug=True)
